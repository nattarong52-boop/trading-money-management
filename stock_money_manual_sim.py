import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import math
import random

st.set_page_config(page_title="‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏∏‡πâ‡∏ô", page_icon="üìà")

st.title("üìà ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏∏‡πâ‡∏ô (‡∏û‡∏∏‡∏ò=‡∏ã‡∏∑‡πâ‡∏≠, ‡∏Ñ‡∏≠=‡∏Ç‡∏≤‡∏¢)")
st.markdown("‡∏™‡∏∏‡πà‡∏°‡∏ã‡∏∑‡πâ‡∏≠/‡∏Ç‡∏≤‡∏¢, ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡πÄ‡∏≠‡∏á, ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ")

# ===== Input =====
capital = st.number_input("üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ö‡∏≤‡∏ó)", min_value=10.0, value=1000.0, step=10.0)
num_trades = st.number_input("üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á", min_value=1, value=5, step=1)
target_profit = st.number_input("üéØ ‡∏Å‡∏≥‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö (‡∏ö‡∏≤‡∏ó)", min_value=0.1, value=1.0, step=0.1)
odds = st.number_input("‚öñÔ∏è ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏à‡πà‡∏≤‡∏¢ (1.0 = ‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏∏‡∏ô)", min_value=0.1, value=1.0, step=0.1)
first_bet = st.number_input("üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÑ‡∏°‡πâ‡πÅ‡∏£‡∏Å (‡∏ö‡∏≤‡∏ó)", min_value=0.1, value=30.0, step=1.0)

# ===== ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ =====
max_bet_amount = first_bet
loss_streak_amount = 0
temp_capital = capital
max_trades_possible = 0

while temp_capital >= max_bet_amount:
    temp_capital -= max_bet_amount
    loss_streak_amount += max_bet_amount
    max_trades_possible += 1
    max_bet_amount = math.ceil((loss_streak_amount + target_profit) / odds)

st.info(f"üí° ‡∏ñ‡πâ‡∏≤‡πÅ‡∏û‡πâ‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡πÑ‡∏°‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {max_trades_possible} ‡πÑ‡∏°‡πâ ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏ô‡∏à‡∏∞‡∏´‡∏°‡∏î")

# ===== Logic ‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á =====
results = []
balance = capital
bet_amount = first_bet
loss_streak_amount = 0
patterns = ["‡∏û‡∏∏‡∏ò", "‡∏Ñ‡∏≠"]

for trade in range(1, num_trades + 1):
    pattern = random.choice(patterns)  # ‡∏™‡∏∏‡πà‡∏°‡∏ã‡∏∑‡πâ‡∏≠/‡∏Ç‡∏≤‡∏¢
    result = st.selectbox(f"‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏°‡πâ {trade} ({pattern})", ["-", "‡∏ä‡∏ô‡∏∞", "‡πÅ‡∏û‡πâ"], key=f"result_{trade}")

    if result == "‡∏ä‡∏ô‡∏∞":
        profit = bet_amount * odds
        balance += profit
        loss_streak_amount = 0
        bet_amount = first_bet
    elif result == "‡πÅ‡∏û‡πâ":
        balance -= bet_amount
        loss_streak_amount += bet_amount
        bet_amount = math.ceil((loss_streak_amount + target_profit) / odds)

    results.append({
        "‡πÑ‡∏°‡πâ": trade,
        "Pattern": pattern,
        "‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå": result,
        "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô": bet_amount,
        "‡∏û‡∏≠‡∏£‡πå‡∏ï": round(balance, 2)
    })

# ===== Show Table =====
df = pd.DataFrame(results)
st.subheader("üìä ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô")
st.dataframe(df)

# ===== Show Chart =====
fig, ax = plt.subplots()
ax.plot(df["‡πÑ‡∏°‡πâ"], df["‡∏û‡∏≠‡∏£‡πå‡∏ï"], marker="o")
ax.set_xlabel("‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà")
ax.set_ylabel("‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏û‡∏≠‡∏£‡πå‡∏ï (‡∏ö‡∏≤‡∏ó)")
ax.set_title("‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏Ç‡∏≠‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï")
ax.grid(True)
st.pyplot(fig)

# ===== Summary =====
total_profit = balance - capital
st.success(f"‚úÖ ‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: {total_profit:,.2f} ‡∏ö‡∏≤‡∏ó")
